

================================================================
== Vitis HLS Report for 'sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4'
================================================================
* Date:           Sat Jul 30 21:26:20 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        iris_hls_vitis
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.912 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      772|      772|  7.720 us|  7.720 us|  772|  772|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4  |      770|      770|         6|          3|          1|   256|       yes|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 3, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.02>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%reuse_addr_reg = alloca i32 1"   --->   Operation 9 'alloca' 'reuse_addr_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%reuse_reg = alloca i32 1"   --->   Operation 10 'alloca' 'reuse_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 11 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 12 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 13 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1"   --->   Operation 14 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%indvar_flatten37 = alloca i32 1"   --->   Operation 15 'alloca' 'indvar_flatten37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln0 = store i9 0, i9 %indvar_flatten37"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %i_1"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln0 = store i7 0, i7 %indvar_flatten"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %j"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln0 = store i3 0, i3 %k"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %reuse_reg"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln0 = store i64 18446744073709551615, i64 %reuse_addr_reg"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc31"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%j_1 = load i4 %j"   --->   Operation 24 'load' 'j_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%i = load i4 %i_1"   --->   Operation 25 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%indvar_flatten37_load = load i9 %indvar_flatten37" [main.cpp:79]   --->   Operation 26 'load' 'indvar_flatten37_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%empty = trunc i4 %i"   --->   Operation 27 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%empty_27 = trunc i4 %j_1"   --->   Operation 28 'trunc' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_3 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %empty_27, i2 0"   --->   Operation 29 'bitconcatenate' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.66ns)   --->   "%icmp_ln79 = icmp_eq  i9 %indvar_flatten37_load, i9 256" [main.cpp:79]   --->   Operation 30 'icmp' 'icmp_ln79' <Predicate = true> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.82ns)   --->   "%add_ln79 = add i9 %indvar_flatten37_load, i9 1" [main.cpp:79]   --->   Operation 31 'add' 'add_ln79' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln79 = br i1 %icmp_ln79, void %for.inc37, void %for.body44.preheader.exitStub" [main.cpp:79]   --->   Operation 32 'br' 'br_ln79' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%k_load = load i3 %k" [main.cpp:81]   --->   Operation 33 'load' 'k_load' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i7 %indvar_flatten" [main.cpp:80]   --->   Operation 34 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.48ns)   --->   "%icmp_ln80 = icmp_eq  i7 %indvar_flatten_load, i7 32" [main.cpp:80]   --->   Operation 35 'icmp' 'icmp_ln80' <Predicate = (!icmp_ln79)> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (1.02ns)   --->   "%select_ln79 = select i1 %icmp_ln80, i4 0, i4 %j_1" [main.cpp:79]   --->   Operation 36 'select' 'select_ln79' <Predicate = (!icmp_ln79)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.73ns)   --->   "%add_ln79_1 = add i4 %i, i4 1" [main.cpp:79]   --->   Operation 37 'add' 'add_ln79_1' <Predicate = (!icmp_ln79)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%empty_30 = trunc i4 %add_ln79_1" [main.cpp:79]   --->   Operation 38 'trunc' 'empty_30' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node add_ln82_1)   --->   "%select_ln79_3 = select i1 %icmp_ln80, i5 0, i5 %tmp_3" [main.cpp:79]   --->   Operation 39 'select' 'select_ln79_3' <Predicate = (!icmp_ln79)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node and_ln79)   --->   "%xor_ln79 = xor i1 %icmp_ln80, i1 1" [main.cpp:79]   --->   Operation 40 'xor' 'xor_ln79' <Predicate = (!icmp_ln79)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.13ns)   --->   "%icmp_ln81 = icmp_eq  i3 %k_load, i3 4" [main.cpp:81]   --->   Operation 41 'icmp' 'icmp_ln81' <Predicate = (!icmp_ln79)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln79 = and i1 %icmp_ln81, i1 %xor_ln79" [main.cpp:79]   --->   Operation 42 'and' 'and_ln79' <Predicate = (!icmp_ln79)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (1.73ns)   --->   "%add_ln80 = add i4 %select_ln79, i4 1" [main.cpp:80]   --->   Operation 43 'add' 'add_ln80' <Predicate = (!icmp_ln79)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node select_ln80)   --->   "%or_ln80 = or i1 %and_ln79, i1 %icmp_ln80" [main.cpp:80]   --->   Operation 44 'or' 'or_ln80' <Predicate = (!icmp_ln79)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln80 = select i1 %or_ln80, i3 0, i3 %k_load" [main.cpp:80]   --->   Operation 45 'select' 'select_ln80' <Predicate = (!icmp_ln79)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node add_ln82_1)   --->   "%empty_31 = trunc i4 %add_ln80" [main.cpp:80]   --->   Operation 46 'trunc' 'empty_31' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node add_ln82_1)   --->   "%p_mid1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %empty_31, i2 0" [main.cpp:80]   --->   Operation 47 'bitconcatenate' 'p_mid1' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node add_ln82_1)   --->   "%select_ln80_1 = select i1 %and_ln79, i5 %p_mid1, i5 %select_ln79_3" [main.cpp:80]   --->   Operation 48 'select' 'select_ln80_1' <Predicate = (!icmp_ln79)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%k_cast = zext i3 %select_ln80" [main.cpp:80]   --->   Operation 49 'zext' 'k_cast' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (1.78ns) (out node of the LUT)   --->   "%add_ln82_1 = add i5 %k_cast, i5 %select_ln80_1" [main.cpp:82]   --->   Operation 50 'add' 'add_ln82_1' <Predicate = (!icmp_ln79)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (1.58ns)   --->   "%store_ln81 = store i9 %add_ln79, i9 %indvar_flatten37" [main.cpp:81]   --->   Operation 51 'store' 'store_ln81' <Predicate = (!icmp_ln79)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 6.11>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i3.i3, i3 %empty, i3 0"   --->   Operation 52 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i6 %tmp_1" [main.cpp:80]   --->   Operation 53 'zext' 'zext_ln80' <Predicate = (!icmp_ln80 & !and_ln79)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_cast_cast = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i2.i4, i2 2, i4 %j_1"   --->   Operation 54 'bitconcatenate' 'tmp_cast_cast' <Predicate = (!icmp_ln80 & !and_ln79)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_cast_cast_cast = zext i6 %tmp_cast_cast"   --->   Operation 55 'zext' 'tmp_cast_cast_cast' <Predicate = (!icmp_ln80 & !and_ln79)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (1.82ns)   --->   "%empty_28 = add i7 %tmp_cast_cast_cast, i7 %zext_ln80" [main.cpp:80]   --->   Operation 56 'add' 'empty_28' <Predicate = (!icmp_ln80 & !and_ln79)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 57 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (1.02ns)   --->   "%select_ln79_1 = select i1 %icmp_ln80, i4 %add_ln79_1, i4 %i" [main.cpp:79]   --->   Operation 58 'select' 'select_ln79_1' <Predicate = (!icmp_ln79)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i4 %select_ln79_1" [main.cpp:79]   --->   Operation 59 'trunc' 'trunc_ln79' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%p_mid = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %trunc_ln79, i2 0" [main.cpp:79]   --->   Operation 60 'bitconcatenate' 'p_mid' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%p_mid3 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i3.i3, i3 %empty_30, i3 0" [main.cpp:79]   --->   Operation 61 'bitconcatenate' 'p_mid3' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i6 %p_mid3" [main.cpp:80]   --->   Operation 62 'zext' 'zext_ln80_1' <Predicate = (!icmp_ln79 & icmp_ln80 & !and_ln79)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node p_mid16)   --->   "%select_ln79_2 = select i1 %icmp_ln80, i6 %p_mid3, i6 %tmp_1" [main.cpp:79]   --->   Operation 63 'select' 'select_ln79_2' <Predicate = (!icmp_ln79 & and_ln79)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node p_mid16)   --->   "%zext_ln80_3 = zext i6 %select_ln79_2" [main.cpp:80]   --->   Operation 64 'zext' 'zext_ln80_3' <Predicate = (!icmp_ln79 & and_ln79)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (1.87ns)   --->   "%p_mid131 = add i7 %zext_ln80_1, i7 32" [main.cpp:80]   --->   Operation 65 'add' 'p_mid131' <Predicate = (!icmp_ln79 & icmp_ln80 & !and_ln79)> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_2)   --->   "%select_ln79_4 = select i1 %icmp_ln80, i7 %p_mid131, i7 %empty_28" [main.cpp:79]   --->   Operation 66 'select' 'select_ln79_4' <Predicate = (!icmp_ln79 & !and_ln79)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node p_mid16)   --->   "%tmp_cast_mid1_cast = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i2.i4, i2 2, i4 %add_ln80" [main.cpp:80]   --->   Operation 67 'bitconcatenate' 'tmp_cast_mid1_cast' <Predicate = (!icmp_ln79 & and_ln79)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node p_mid16)   --->   "%tmp_cast_mid1_cast_cast = zext i6 %tmp_cast_mid1_cast" [main.cpp:80]   --->   Operation 68 'zext' 'tmp_cast_mid1_cast_cast' <Predicate = (!icmp_ln79 & and_ln79)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (1.82ns) (out node of the LUT)   --->   "%p_mid16 = add i7 %tmp_cast_mid1_cast_cast, i7 %zext_ln80_3" [main.cpp:80]   --->   Operation 69 'add' 'p_mid16' <Predicate = (!icmp_ln79 & and_ln79)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln80_2 = select i1 %and_ln79, i7 %p_mid16, i7 %select_ln79_4" [main.cpp:80]   --->   Operation 70 'select' 'select_ln80_2' <Predicate = (!icmp_ln79)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i7 %select_ln80_2" [main.cpp:80]   --->   Operation 71 'zext' 'zext_ln80_2' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (1.78ns)   --->   "%add_ln82 = add i5 %k_cast, i5 %p_mid" [main.cpp:82]   --->   Operation 72 'add' 'add_ln82' <Predicate = (!icmp_ln79)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i5 %add_ln82" [main.cpp:82]   --->   Operation 73 'zext' 'zext_ln82' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%acc_addr_2 = getelementptr i32 %acc, i64 0, i64 %zext_ln82" [main.cpp:82]   --->   Operation 74 'getelementptr' 'acc_addr_2' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%reuse_addr_reg_load = load i64 %reuse_addr_reg"   --->   Operation 75 'load' 'reuse_addr_reg_load' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 76 [2/2] (3.25ns)   --->   "%acc_load_2 = load i7 %acc_addr_2" [main.cpp:82]   --->   Operation 76 'load' 'acc_load_2' <Predicate = (!icmp_ln79)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>
ST_2 : Operation 77 [1/1] (2.77ns)   --->   "%addr_cmp = icmp_eq  i64 %reuse_addr_reg_load, i64 %zext_ln82" [main.cpp:82]   --->   Operation 77 'icmp' 'addr_cmp' <Predicate = (!icmp_ln79)> <Delay = 2.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln82_1 = zext i5 %add_ln82_1" [main.cpp:82]   --->   Operation 78 'zext' 'zext_ln82_1' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%w_addr = getelementptr i11 %w, i64 0, i64 %zext_ln82_1" [main.cpp:82]   --->   Operation 79 'getelementptr' 'w_addr' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 80 [2/2] (2.32ns)   --->   "%w_load = load i6 %w_addr" [main.cpp:82]   --->   Operation 80 'load' 'w_load' <Predicate = (!icmp_ln79)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 11> <Depth = 59> <ROM>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%acc_addr_3 = getelementptr i32 %acc, i64 0, i64 %zext_ln80_2" [main.cpp:80]   --->   Operation 81 'getelementptr' 'acc_addr_3' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%reuse_addr_reg_load_1 = load i64 %reuse_addr_reg"   --->   Operation 82 'load' 'reuse_addr_reg_load_1' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_2 : Operation 83 [2/2] (3.25ns)   --->   "%acc_load_3 = load i7 %acc_addr_3" [main.cpp:82]   --->   Operation 83 'load' 'acc_load_3' <Predicate = (!icmp_ln79)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>
ST_2 : Operation 84 [1/1] (2.77ns)   --->   "%addr_cmp4 = icmp_eq  i64 %reuse_addr_reg_load_1, i64 %zext_ln80_2" [main.cpp:80]   --->   Operation 84 'icmp' 'addr_cmp4' <Predicate = (!icmp_ln79)> <Delay = 2.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (1.58ns)   --->   "%store_ln80 = store i64 %zext_ln80_2, i64 %reuse_addr_reg" [main.cpp:80]   --->   Operation 85 'store' 'store_ln80' <Predicate = (!icmp_ln79)> <Delay = 1.58>
ST_2 : Operation 86 [1/1] (1.58ns)   --->   "%store_ln81 = store i4 %select_ln79_1, i4 %i_1" [main.cpp:81]   --->   Operation 86 'store' 'store_ln81' <Predicate = (!icmp_ln79)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 4.45>
ST_3 : Operation 87 [1/1] (1.02ns)   --->   "%select_ln80_3 = select i1 %and_ln79, i4 %add_ln80, i4 %select_ln79" [main.cpp:80]   --->   Operation 87 'select' 'select_ln80_3' <Predicate = (!icmp_ln79)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%reuse_reg_load = load i32 %reuse_reg"   --->   Operation 88 'load' 'reuse_reg_load' <Predicate = (!icmp_ln79 & addr_cmp)> <Delay = 0.00>
ST_3 : Operation 89 [1/2] (3.25ns)   --->   "%acc_load_2 = load i7 %acc_addr_2" [main.cpp:82]   --->   Operation 89 'load' 'acc_load_2' <Predicate = (!icmp_ln79)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>
ST_3 : Operation 90 [1/1] (0.69ns)   --->   "%reuse_select = select i1 %addr_cmp, i32 %reuse_reg_load, i32 %acc_load_2" [main.cpp:82]   --->   Operation 90 'select' 'reuse_select' <Predicate = (!icmp_ln79)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 91 [1/2] (2.32ns)   --->   "%w_load = load i6 %w_addr" [main.cpp:82]   --->   Operation 91 'load' 'w_load' <Predicate = (!icmp_ln79)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 11> <Depth = 59> <ROM>
ST_3 : Operation 92 [1/2] (3.25ns)   --->   "%acc_load_3 = load i7 %acc_addr_3" [main.cpp:82]   --->   Operation 92 'load' 'acc_load_3' <Predicate = (!icmp_ln79)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>
ST_3 : Operation 93 [1/1] (1.65ns)   --->   "%add_ln81 = add i3 %select_ln80, i3 1" [main.cpp:81]   --->   Operation 93 'add' 'add_ln81' <Predicate = (!icmp_ln79)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (1.87ns)   --->   "%add_ln80_1 = add i7 %indvar_flatten_load, i7 1" [main.cpp:80]   --->   Operation 94 'add' 'add_ln80_1' <Predicate = (!icmp_ln79 & !icmp_ln80)> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.99ns)   --->   "%select_ln80_4 = select i1 %icmp_ln80, i7 1, i7 %add_ln80_1" [main.cpp:80]   --->   Operation 95 'select' 'select_ln80_4' <Predicate = (!icmp_ln79)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (1.58ns)   --->   "%store_ln81 = store i7 %select_ln80_4, i7 %indvar_flatten" [main.cpp:81]   --->   Operation 96 'store' 'store_ln81' <Predicate = (!icmp_ln79)> <Delay = 1.58>
ST_3 : Operation 97 [1/1] (1.58ns)   --->   "%store_ln81 = store i4 %select_ln80_3, i4 %j" [main.cpp:81]   --->   Operation 97 'store' 'store_ln81' <Predicate = (!icmp_ln79)> <Delay = 1.58>
ST_3 : Operation 98 [1/1] (1.58ns)   --->   "%store_ln81 = store i3 %add_ln81, i3 %k" [main.cpp:81]   --->   Operation 98 'store' 'store_ln81' <Predicate = (!icmp_ln79)> <Delay = 1.58>
ST_3 : Operation 114 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 114 'ret' 'ret_ln0' <Predicate = (icmp_ln79)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%sext_ln82 = sext i11 %w_load" [main.cpp:82]   --->   Operation 99 'sext' 'sext_ln82' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [2/2] (6.91ns)   --->   "%mul_ln82 = mul i32 %reuse_select, i32 %sext_ln82" [main.cpp:82]   --->   Operation 100 'mul' 'mul_ln82' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.91>
ST_5 : Operation 101 [1/2] (6.91ns)   --->   "%mul_ln82 = mul i32 %reuse_select, i32 %sext_ln82" [main.cpp:82]   --->   Operation 101 'mul' 'mul_ln82' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.80>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_str"   --->   Operation 102 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (0.00ns)   --->   "%empty_29 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256"   --->   Operation 103 'speclooptripcount' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 104 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 104 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 105 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_80_3_VITIS_LOOP_81_4_str"   --->   Operation 105 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 106 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 107 [1/1] (0.00ns)   --->   "%specloopname_ln81 = specloopname void @_ssdm_op_SpecLoopName, void @empty_13" [main.cpp:81]   --->   Operation 107 'specloopname' 'specloopname_ln81' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 108 [1/1] (0.00ns)   --->   "%reuse_reg_load_1 = load i32 %reuse_reg"   --->   Operation 108 'load' 'reuse_reg_load_1' <Predicate = (addr_cmp4)> <Delay = 0.00>
ST_6 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node add_ln82_2)   --->   "%reuse_select5 = select i1 %addr_cmp4, i32 %reuse_reg_load_1, i32 %acc_load_3" [main.cpp:80]   --->   Operation 109 'select' 'reuse_select5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 110 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln82_2 = add i32 %reuse_select5, i32 %mul_ln82" [main.cpp:82]   --->   Operation 110 'add' 'add_ln82_2' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 111 [1/1] (3.25ns)   --->   "%store_ln82 = store i32 %add_ln82_2, i7 %acc_addr_3" [main.cpp:82]   --->   Operation 111 'store' 'store_ln82' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>
ST_6 : Operation 112 [1/1] (1.58ns)   --->   "%store_ln82 = store i32 %add_ln82_2, i32 %reuse_reg" [main.cpp:82]   --->   Operation 112 'store' 'store_ln82' <Predicate = true> <Delay = 1.58>
ST_6 : Operation 113 [1/1] (0.00ns)   --->   "%br_ln81 = br void %for.inc31" [main.cpp:81]   --->   Operation 113 'br' 'br_ln81' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 6.03ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten') [7]  (0 ns)
	'load' operation ('indvar_flatten_load', main.cpp:80) on local variable 'indvar_flatten' [36]  (0 ns)
	'icmp' operation ('icmp_ln80', main.cpp:80) [39]  (1.49 ns)
	'select' operation ('select_ln79', main.cpp:79) [40]  (1.02 ns)
	'add' operation ('add_ln80', main.cpp:80) [57]  (1.74 ns)
	'select' operation ('select_ln80_1', main.cpp:80) [63]  (0 ns)
	'add' operation ('add_ln82_1', main.cpp:82) [81]  (1.78 ns)

 <State 2>: 6.12ns
The critical path consists of the following:
	'add' operation ('p_mid131', main.cpp:80) [51]  (1.87 ns)
	'select' operation ('select_ln79_4', main.cpp:79) [52]  (0 ns)
	'select' operation ('select_ln80_2', main.cpp:80) [67]  (0.993 ns)
	'getelementptr' operation ('acc_addr_3', main.cpp:80) [86]  (0 ns)
	'load' operation ('acc_load_3', main.cpp:82) on array 'acc' [89]  (3.25 ns)

 <State 3>: 4.45ns
The critical path consists of the following:
	'add' operation ('add_ln80_1', main.cpp:80) [98]  (1.87 ns)
	'select' operation ('select_ln80_4', main.cpp:80) [99]  (0.993 ns)
	'store' operation ('store_ln81', main.cpp:81) of variable 'select_ln80_4', main.cpp:80 on local variable 'indvar_flatten' [102]  (1.59 ns)

 <State 4>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln82', main.cpp:82) [92]  (6.91 ns)

 <State 5>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln82', main.cpp:82) [92]  (6.91 ns)

 <State 6>: 5.81ns
The critical path consists of the following:
	'load' operation ('reuse_reg_load_1') on local variable 'reuse_reg' [87]  (0 ns)
	'select' operation ('reuse_select5', main.cpp:80) [91]  (0 ns)
	'add' operation ('add_ln82_2', main.cpp:82) [93]  (2.55 ns)
	'store' operation ('store_ln82', main.cpp:82) of variable 'add_ln82_2', main.cpp:82 on array 'acc' [94]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
