

================================================================
== Vitis HLS Report for 'sw_compute_Pipeline_VITIS_LOOP_89_5'
================================================================
* Date:           Sat Jul 30 21:26:21 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        iris_hls_vitis
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.180 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      135|      135|  1.350 us|  1.350 us|  135|  135|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_89_5  |      133|      133|         8|          2|          1|    64|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 2, D = 8, States = { 1 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.25>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 11 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.58ns)   --->   "%store_ln0 = store i7 32, i7 %i"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body44"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i_2 = load i7 %i" [main.cpp:89]   --->   Operation 14 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 15 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.48ns)   --->   "%icmp_ln89 = icmp_eq  i7 %i_2, i7 96" [main.cpp:89]   --->   Operation 16 'icmp' 'icmp_ln89' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln89 = br i1 %icmp_ln89, void %for.body44.split, void %VITIS_LOOP_101_8.preheader.exitStub" [main.cpp:89]   --->   Operation 18 'br' 'br_ln89' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i_2_cast = zext i7 %i_2" [main.cpp:89]   --->   Operation 19 'zext' 'i_2_cast' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%acc_addr_1 = getelementptr i32 %acc, i64 0, i64 %i_2_cast" [main.cpp:91]   --->   Operation 20 'getelementptr' 'acc_addr_1' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 21 [2/2] (3.25ns)   --->   "%acc_load = load i7 %acc_addr_1" [main.cpp:91]   --->   Operation 21 'load' 'acc_load' <Predicate = (!icmp_ln89)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>

State 2 <SV = 1> <Delay = 6.50>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specloopname_ln89 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [main.cpp:89]   --->   Operation 22 'specloopname' 'specloopname_ln89' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 23 [1/2] (3.25ns)   --->   "%acc_load = load i7 %acc_addr_1" [main.cpp:91]   --->   Operation 23 'load' 'acc_load' <Predicate = (!icmp_ln89)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %acc_load, i32 31" [main.cpp:91]   --->   Operation 24 'bitselect' 'tmp' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln91 = br i1 %tmp, void %if.end, void %if.then" [main.cpp:91]   --->   Operation 25 'br' 'br_ln91' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (3.25ns)   --->   "%store_ln91 = store i32 0, i7 %acc_addr_1" [main.cpp:91]   --->   Operation 26 'store' 'store_ln91' <Predicate = (!icmp_ln89 & tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln91 = br void %if.end" [main.cpp:91]   --->   Operation 27 'br' 'br_ln91' <Predicate = (!icmp_ln89 & tmp)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.87ns)   --->   "%add_ln89 = add i7 %i_2, i7 1" [main.cpp:89]   --->   Operation 28 'add' 'add_ln89' <Predicate = (!icmp_ln89)> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (1.58ns)   --->   "%store_ln89 = store i7 %add_ln89, i7 %i" [main.cpp:89]   --->   Operation 29 'store' 'store_ln89' <Predicate = (!icmp_ln89)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 30 [2/2] (3.25ns)   --->   "%acc_load_1 = load i7 %acc_addr_1" [main.cpp:93]   --->   Operation 30 'load' 'acc_load_1' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 31 [1/2] (3.25ns)   --->   "%acc_load_1 = load i7 %acc_addr_1" [main.cpp:93]   --->   Operation 31 'load' 'acc_load_1' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>

State 5 <SV = 4> <Delay = 6.91>
ST_5 : Operation 32 [2/2] (6.91ns)   --->   "%mul_ln93 = mul i32 %acc_load_1, i32 402" [main.cpp:93]   --->   Operation 32 'mul' 'mul_ln93' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.91>
ST_6 : Operation 33 [1/2] (6.91ns)   --->   "%mul_ln93 = mul i32 %acc_load_1, i32 402" [main.cpp:93]   --->   Operation 33 'mul' 'mul_ln93' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %mul_ln93, i32 31" [main.cpp:93]   --->   Operation 34 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln93_2 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %mul_ln93, i32 16, i32 31" [main.cpp:93]   --->   Operation 35 'partselect' 'trunc_ln93_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 48 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 48 'ret' 'ret_ln0' <Predicate = (icmp_ln89)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 7.18>
ST_7 : Operation 36 [1/1] (2.55ns)   --->   "%sub_ln93 = sub i32 0, i32 %mul_ln93" [main.cpp:93]   --->   Operation 36 'sub' 'sub_ln93' <Predicate = (tmp_1)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln93_1 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %sub_ln93, i32 16, i32 31" [main.cpp:93]   --->   Operation 37 'partselect' 'trunc_ln93_1' <Predicate = (tmp_1)> <Delay = 0.00>
ST_7 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln93 = zext i16 %trunc_ln93_1" [main.cpp:93]   --->   Operation 38 'zext' 'zext_ln93' <Predicate = (tmp_1)> <Delay = 0.00>
ST_7 : Operation 39 [1/1] (2.07ns)   --->   "%sub_ln93_1 = sub i17 0, i17 %zext_ln93" [main.cpp:93]   --->   Operation 39 'sub' 'sub_ln93_1' <Predicate = (tmp_1)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln93_1 = zext i16 %trunc_ln93_2" [main.cpp:93]   --->   Operation 40 'zext' 'zext_ln93_1' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_7 : Operation 41 [1/1] (0.78ns)   --->   "%select_ln93 = select i1 %tmp_1, i17 %sub_ln93_1, i17 %zext_ln93_1" [main.cpp:93]   --->   Operation 41 'select' 'select_ln93' <Predicate = true> <Delay = 0.78> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i10 @_ssdm_op_PartSelect.i10.i17.i32.i32, i17 %select_ln93, i32 7, i32 16" [main.cpp:95]   --->   Operation 42 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 43 [1/1] (1.77ns)   --->   "%icmp_ln95 = icmp_sgt  i10 %tmp_2, i10 0" [main.cpp:95]   --->   Operation 43 'icmp' 'icmp_ln95' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.03>
ST_8 : Operation 44 [1/1] (0.78ns)   --->   "%select_ln95 = select i1 %icmp_ln95, i17 127, i17 %select_ln93" [main.cpp:95]   --->   Operation 44 'select' 'select_ln95' <Predicate = true> <Delay = 0.78> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 45 [1/1] (0.00ns)   --->   "%select_ln95_cast = sext i17 %select_ln95" [main.cpp:95]   --->   Operation 45 'sext' 'select_ln95_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 46 [1/1] (3.25ns)   --->   "%store_ln95 = store i32 %select_ln95_cast, i7 %acc_addr_1" [main.cpp:95]   --->   Operation 46 'store' 'store_ln95' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 125> <RAM>
ST_8 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln89 = br void %for.body44" [main.cpp:89]   --->   Operation 47 'br' 'br_ln89' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.25ns
The critical path consists of the following:
	'alloca' operation ('i') [2]  (0 ns)
	'load' operation ('i', main.cpp:89) on local variable 'i' [6]  (0 ns)
	'getelementptr' operation ('acc_addr_1', main.cpp:91) [14]  (0 ns)
	'load' operation ('acc_load', main.cpp:91) on array 'acc' [15]  (3.25 ns)

 <State 2>: 6.51ns
The critical path consists of the following:
	'add' operation ('add_ln89', main.cpp:89) [37]  (1.87 ns)
	'store' operation ('store_ln89', main.cpp:89) of variable 'add_ln89', main.cpp:89 on local variable 'i' [38]  (1.59 ns)
	blocking operation 3.05 ns on control path)

 <State 3>: 3.25ns
The critical path consists of the following:
	'load' operation ('acc_load_1', main.cpp:93) on array 'acc' [22]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('acc_load_1', main.cpp:93) on array 'acc' [22]  (3.25 ns)

 <State 5>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln93', main.cpp:93) [23]  (6.91 ns)

 <State 6>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln93', main.cpp:93) [23]  (6.91 ns)

 <State 7>: 7.18ns
The critical path consists of the following:
	'sub' operation ('sub_ln93', main.cpp:93) [25]  (2.55 ns)
	'sub' operation ('sub_ln93_1', main.cpp:93) [28]  (2.08 ns)
	'select' operation ('select_ln93', main.cpp:93) [31]  (0.781 ns)
	'icmp' operation ('icmp_ln95', main.cpp:95) [33]  (1.77 ns)

 <State 8>: 4.03ns
The critical path consists of the following:
	'select' operation ('select_ln95', main.cpp:95) [34]  (0.781 ns)
	'store' operation ('store_ln95', main.cpp:95) of variable 'select_ln95_cast', main.cpp:95 on array 'acc' [36]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
