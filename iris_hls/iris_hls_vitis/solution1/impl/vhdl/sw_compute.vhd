-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sw_compute is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of sw_compute is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sw_compute_sw_compute,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=2213,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=3977,HLS_SYN_LUT=4531,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal im : STD_LOGIC_VECTOR (63 downto 0);
    signal out_r : STD_LOGIC_VECTOR (63 downto 0);
    signal w_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_ce0 : STD_LOGIC;
    signal w_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_r_read_reg_137 : STD_LOGIC_VECTOR (63 downto 0);
    signal im_read_reg_142 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln76_1_reg_147 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln108_1_reg_152 : STD_LOGIC_VECTOR (61 downto 0);
    signal acc_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal acc_ce0 : STD_LOGIC;
    signal acc_we0 : STD_LOGIC;
    signal acc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal acc_ce1 : STD_LOGIC;
    signal acc_we1 : STD_LOGIC;
    signal acc_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_start : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_done : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_idle : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_ready : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_ce0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_we0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_start : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_done : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_idle : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_ready : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_ce0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_we0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_ce1 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_w_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_w_ce0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_din1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_ce : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_start : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_done : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_idle : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_ready : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_ce0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_we0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_ce1 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_we1 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_start : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_done : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_idle : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_ready : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_ce0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_we0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_w_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_w_ce0 : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_din1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_ce : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_start : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_idle : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_ready : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_acc_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_acc_ce0 : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_157_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_157_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_157_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_157_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sw_compute_sw_compute_Pipeline_VITIS_LOOP_75_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln76_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        im : IN STD_LOGIC_VECTOR (63 downto 0);
        acc_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        acc_ce0 : OUT STD_LOGIC;
        acc_we0 : OUT STD_LOGIC;
        acc_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sw_compute_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        acc_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        acc_ce0 : OUT STD_LOGIC;
        acc_we0 : OUT STD_LOGIC;
        acc_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        acc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        acc_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        acc_ce1 : OUT STD_LOGIC;
        acc_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        w_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        w_ce0 : OUT STD_LOGIC;
        w_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        grp_fu_157_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_157_p_din1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        grp_fu_157_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_157_p_ce : OUT STD_LOGIC );
    end component;


    component sw_compute_sw_compute_Pipeline_VITIS_LOOP_89_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        acc_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        acc_ce0 : OUT STD_LOGIC;
        acc_we0 : OUT STD_LOGIC;
        acc_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        acc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        acc_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        acc_ce1 : OUT STD_LOGIC;
        acc_we1 : OUT STD_LOGIC;
        acc_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        acc_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sw_compute_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        acc_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        acc_ce0 : OUT STD_LOGIC;
        acc_we0 : OUT STD_LOGIC;
        acc_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        acc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        w_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        w_ce0 : OUT STD_LOGIC;
        w_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        grp_fu_157_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_157_p_din1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        grp_fu_157_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_157_p_ce : OUT STD_LOGIC );
    end component;


    component sw_compute_sw_compute_Pipeline_VITIS_LOOP_107_9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln108_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        acc_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        acc_ce0 : OUT STD_LOGIC;
        acc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sw_compute_mul_32s_11s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sw_compute_w_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component sw_compute_acc_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sw_compute_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        im : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component sw_compute_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    w_U : component sw_compute_w_ROM_AUTO_1R
    generic map (
        DataWidth => 11,
        AddressRange => 59,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => w_address0,
        ce0 => w_ce0,
        q0 => w_q0);

    acc_U : component sw_compute_acc_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 125,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => acc_address0,
        ce0 => acc_ce0,
        we0 => acc_we0,
        d0 => acc_d0,
        q0 => acc_q0,
        address1 => acc_address1,
        ce1 => acc_ce1,
        we1 => acc_we1,
        d1 => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_d1,
        q1 => acc_q1);

    grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80 : component sw_compute_sw_compute_Pipeline_VITIS_LOOP_75_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_start,
        ap_done => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_done,
        ap_idle => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_idle,
        ap_ready => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_ready,
        m_axi_gmem_AWVALID => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln76_1 => trunc_ln76_1_reg_147,
        im => im_read_reg_142,
        acc_address0 => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_address0,
        acc_ce0 => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_ce0,
        acc_we0 => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_we0,
        acc_d0 => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_d0);

    grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89 : component sw_compute_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_start,
        ap_done => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_done,
        ap_idle => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_idle,
        ap_ready => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_ready,
        acc_address0 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_address0,
        acc_ce0 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_ce0,
        acc_we0 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_we0,
        acc_d0 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_d0,
        acc_q0 => acc_q0,
        acc_address1 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_address1,
        acc_ce1 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_ce1,
        acc_q1 => acc_q1,
        w_address0 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_w_address0,
        w_ce0 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_w_ce0,
        w_q0 => w_q0,
        grp_fu_157_p_din0 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_din0,
        grp_fu_157_p_din1 => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_din1,
        grp_fu_157_p_dout0 => grp_fu_157_p2,
        grp_fu_157_p_ce => grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_ce);

    grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96 : component sw_compute_sw_compute_Pipeline_VITIS_LOOP_89_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_start,
        ap_done => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_done,
        ap_idle => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_idle,
        ap_ready => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_ready,
        acc_address0 => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_address0,
        acc_ce0 => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_ce0,
        acc_we0 => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_we0,
        acc_d0 => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_d0,
        acc_q0 => acc_q0,
        acc_address1 => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_address1,
        acc_ce1 => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_ce1,
        acc_we1 => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_we1,
        acc_d1 => grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_d1,
        acc_q1 => acc_q1);

    grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101 : component sw_compute_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_start,
        ap_done => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_done,
        ap_idle => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_idle,
        ap_ready => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_ready,
        acc_address0 => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_address0,
        acc_ce0 => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_ce0,
        acc_we0 => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_we0,
        acc_d0 => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_d0,
        acc_q0 => acc_q0,
        w_address0 => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_w_address0,
        w_ce0 => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_w_ce0,
        w_q0 => w_q0,
        grp_fu_157_p_din0 => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_din0,
        grp_fu_157_p_din1 => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_din1,
        grp_fu_157_p_dout0 => grp_fu_157_p2,
        grp_fu_157_p_ce => grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_ce);

    grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108 : component sw_compute_sw_compute_Pipeline_VITIS_LOOP_107_9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_start,
        ap_done => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done,
        ap_idle => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_idle,
        ap_ready => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_ready,
        m_axi_gmem_AWVALID => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv32_0,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln108_1 => trunc_ln108_1_reg_152,
        acc_address0 => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_acc_address0,
        acc_ce0 => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_acc_ce0,
        acc_q0 => acc_q0,
        out_r => out_r_read_reg_137);

    control_s_axi_U : component sw_compute_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        im => im,
        out_r => out_r,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component sw_compute_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 9,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_DW => 32,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARADDR,
        I_ARLEN => grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWADDR,
        I_AWLEN => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWLEN,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WDATA,
        I_WSTRB => grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WSTRB,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY);

    mul_32s_11s_32_2_1_U25 : component sw_compute_mul_32s_11s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_157_p0,
        din1 => grp_fu_157_p1,
        ce => grp_fu_157_ce,
        dout => grp_fu_157_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_ready = ap_const_logic_1)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_ready = ap_const_logic_1)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_ready = ap_const_logic_1)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_ready = ap_const_logic_1)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_ready = ap_const_logic_1)) then 
                    grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                im_read_reg_142 <= im;
                out_r_read_reg_137 <= out_r;
                trunc_ln108_1_reg_152 <= out_r(63 downto 2);
                trunc_ln76_1_reg_147 <= im(63 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_done, grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_done, grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_done, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_done, grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    acc_address0_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_address0, grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_address0, grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_address0, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_address0, grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_acc_address0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            acc_address0 <= grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_acc_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            acc_address0 <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            acc_address0 <= grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            acc_address0 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            acc_address0 <= grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_address0;
        else 
            acc_address0 <= "XXXXXXX";
        end if; 
    end process;


    acc_address1_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_address1, grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_address1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            acc_address1 <= grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            acc_address1 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_address1;
        else 
            acc_address1 <= "XXXXXXX";
        end if; 
    end process;


    acc_ce0_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_ce0, grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_ce0, grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_ce0, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_ce0, grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_acc_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            acc_ce0 <= grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_acc_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            acc_ce0 <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            acc_ce0 <= grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            acc_ce0 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            acc_ce0 <= grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_ce0;
        else 
            acc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc_ce1_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_ce1, grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_ce1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            acc_ce1 <= grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            acc_ce1 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_ce1;
        else 
            acc_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    acc_d0_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_d0, grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_d0, grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_d0, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_d0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            acc_d0 <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            acc_d0 <= grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            acc_d0 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            acc_d0 <= grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_d0;
        else 
            acc_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    acc_we0_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_we0, grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_we0, grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_we0, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_we0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            acc_we0 <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_acc_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            acc_we0 <= grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            acc_we0 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_acc_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            acc_we0 <= grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_acc_we0;
        else 
            acc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    acc_we1_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_we1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            acc_we1 <= grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_acc_we1;
        else 
            acc_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done)
    begin
        if ((grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_done)
    begin
        if ((grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_done)
    begin
        if ((grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_done)
    begin
        if ((grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_done)
    begin
        if ((grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done, ap_CS_fsm_state11)
    begin
        if (((grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done, ap_CS_fsm_state11)
    begin
        if (((grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    gmem_ARVALID_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARVALID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_ARVALID <= grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWVALID, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_AWVALID <= grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_AWVALID;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_BREADY, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_BREADY <= grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_BREADY;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_RREADY, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_RREADY <= grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WVALID, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_WVALID <= grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_m_axi_gmem_WVALID;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_157_ce_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_ce, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_ce, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_157_ce <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_157_ce <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_ce;
        else 
            grp_fu_157_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_157_p0_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_din0, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_din0, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_157_p0 <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_157_p0 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_din0;
        else 
            grp_fu_157_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_157_p1_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_din1, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_din1, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_157_p1 <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_grp_fu_157_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_157_p1 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_grp_fu_157_p_din1;
        else 
            grp_fu_157_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_start <= grp_sw_compute_Pipeline_VITIS_LOOP_107_9_fu_108_ap_start_reg;
    grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_start <= grp_sw_compute_Pipeline_VITIS_LOOP_75_1_fu_80_ap_start_reg;
    grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_start <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_ap_start_reg;
    grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_start <= grp_sw_compute_Pipeline_VITIS_LOOP_89_5_fu_96_ap_start_reg;
    grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_start <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_ap_start_reg;

    w_address0_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_w_address0, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_w_address0, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            w_address0 <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_w_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            w_address0 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_w_address0;
        else 
            w_address0 <= "XXXXXX";
        end if; 
    end process;


    w_ce0_assign_proc : process(grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_w_ce0, grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_w_ce0, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            w_ce0 <= grp_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7_fu_101_w_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            w_ce0 <= grp_sw_compute_Pipeline_VITIS_LOOP_79_2_VITIS_LOOP_80_3_VITIS_LOOP_81_4_fu_89_w_ce0;
        else 
            w_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
