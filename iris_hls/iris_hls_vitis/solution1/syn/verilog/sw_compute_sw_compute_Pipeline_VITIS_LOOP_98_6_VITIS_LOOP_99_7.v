// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sw_compute_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        acc_address0,
        acc_ce0,
        acc_we0,
        acc_d0,
        acc_q0,
        w_address0,
        w_ce0,
        w_q0,
        grp_fu_157_p_din0,
        grp_fu_157_p_din1,
        grp_fu_157_p_dout0,
        grp_fu_157_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 43'd1;
parameter    ap_ST_fsm_pp0_stage1 = 43'd2;
parameter    ap_ST_fsm_pp0_stage2 = 43'd4;
parameter    ap_ST_fsm_pp0_stage3 = 43'd8;
parameter    ap_ST_fsm_pp0_stage4 = 43'd16;
parameter    ap_ST_fsm_pp0_stage5 = 43'd32;
parameter    ap_ST_fsm_pp0_stage6 = 43'd64;
parameter    ap_ST_fsm_pp0_stage7 = 43'd128;
parameter    ap_ST_fsm_pp0_stage8 = 43'd256;
parameter    ap_ST_fsm_pp0_stage9 = 43'd512;
parameter    ap_ST_fsm_pp0_stage10 = 43'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 43'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 43'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 43'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 43'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 43'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 43'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 43'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 43'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 43'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 43'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 43'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 43'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 43'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 43'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 43'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 43'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 43'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 43'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 43'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 43'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 43'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 43'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 43'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 43'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 43'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 43'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 43'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 43'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 43'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 43'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 43'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 43'd4398046511104;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] acc_address0;
output   acc_ce0;
output   acc_we0;
output  [31:0] acc_d0;
input  [31:0] acc_q0;
output  [5:0] w_address0;
output   w_ce0;
input  [10:0] w_q0;
output  [31:0] grp_fu_157_p_din0;
output  [10:0] grp_fu_157_p_din1;
input  [31:0] grp_fu_157_p_dout0;
output   grp_fu_157_p_ce;

reg ap_idle;
reg[6:0] acc_address0;
reg acc_ce0;
reg acc_we0;
reg[31:0] acc_d0;
reg[5:0] w_address0;
reg w_ce0;

(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln98_reg_853;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage42;
wire    ap_block_state43_pp0_stage42_iter0;
wire    ap_block_pp0_stage42_subdone;
reg  signed [10:0] reg_258;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg  signed [31:0] reg_262;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_11001;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_11001;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_state36_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_11001;
wire    ap_CS_fsm_pp0_stage40;
wire    ap_block_state41_pp0_stage40_iter0;
wire    ap_block_pp0_stage40_11001;
reg  signed [10:0] reg_266;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [3:0] i_1_reg_841;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state44_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] empty_fu_291_p1;
reg   [2:0] empty_reg_847;
wire   [0:0] icmp_ln98_fu_295_p2;
wire   [0:0] icmp_ln99_fu_310_p2;
reg   [0:0] icmp_ln99_reg_857;
wire   [1:0] select_ln98_fu_316_p3;
reg   [1:0] select_ln98_reg_864;
wire   [3:0] add_ln98_9_fu_324_p2;
reg   [3:0] add_ln98_9_reg_872;
wire   [2:0] empty_26_fu_330_p1;
reg   [2:0] empty_26_reg_878;
wire   [2:0] select_ln98_2_fu_407_p3;
reg   [2:0] select_ln98_2_reg_889;
reg   [6:0] acc_addr_reg_894;
wire   [4:0] tmp_s_fu_448_p3;
reg   [4:0] tmp_s_reg_904;
wire   [31:0] add_ln100_1_fu_478_p2;
reg   [31:0] add_ln100_1_reg_919;
wire   [6:0] zext_ln98_2_fu_510_p1;
reg   [6:0] zext_ln98_2_reg_929;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg  signed [10:0] w_load_3_reg_945;
reg  signed [10:0] w_load_4_reg_955;
wire  signed [31:0] sext_ln102_fu_561_p1;
reg   [31:0] mul_ln102_reg_975;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
reg  signed [10:0] w_load_6_reg_980;
wire   [31:0] add_ln102_fu_607_p2;
reg   [31:0] add_ln102_reg_990;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg  signed [10:0] w_load_7_reg_995;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg  signed [10:0] w_load_8_reg_1010;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [31:0] grp_fu_644_p2;
reg   [31:0] mul_ln102_1_reg_1020;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire   [31:0] add_ln102_1_fu_650_p2;
reg   [31:0] add_ln102_1_reg_1025;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire   [31:0] grp_fu_668_p2;
reg   [31:0] mul_ln102_2_reg_1040;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
wire   [31:0] add_ln102_2_fu_674_p2;
reg   [31:0] add_ln102_2_reg_1045;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
wire   [31:0] grp_fu_692_p2;
reg   [31:0] mul_ln102_3_reg_1060;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire   [31:0] add_ln102_3_fu_698_p2;
reg   [31:0] add_ln102_3_reg_1065;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_11001;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_11001;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
wire   [31:0] grp_fu_717_p2;
reg   [31:0] mul_ln102_4_reg_1080;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_11001;
wire   [31:0] add_ln102_4_fu_723_p2;
reg   [31:0] add_ln102_4_reg_1085;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_11001;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_11001;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_11001;
wire   [31:0] grp_fu_741_p2;
reg   [31:0] mul_ln102_5_reg_1100;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_state33_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_11001;
wire   [31:0] add_ln102_5_fu_747_p2;
reg   [31:0] add_ln102_5_reg_1105;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_state34_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_11001;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_state35_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_11001;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_state37_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_11001;
wire   [31:0] grp_fu_765_p2;
reg   [31:0] mul_ln102_6_reg_1120;
wire    ap_CS_fsm_pp0_stage37;
wire    ap_block_state38_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_11001;
wire   [31:0] add_ln102_6_fu_771_p2;
reg   [31:0] add_ln102_6_reg_1125;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_state39_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_11001;
wire    ap_CS_fsm_pp0_stage39;
wire    ap_block_state40_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_11001;
wire    ap_CS_fsm_pp0_stage41;
wire    ap_block_state42_pp0_stage41_iter0;
wire    ap_block_pp0_stage41_11001;
wire   [31:0] grp_fu_789_p2;
reg   [31:0] mul_ln102_7_reg_1140;
wire    ap_block_pp0_stage42_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln100_fu_346_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln100_1_fu_429_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln102_fu_443_p1;
wire   [63:0] zext_ln102_1_fu_469_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln102_2_fu_498_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln98_3_fu_520_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln102_3_fu_538_p1;
wire   [63:0] zext_ln102_4_fu_556_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln102_5_fu_584_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln102_6_fu_602_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln102_7_fu_625_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln98_4_fu_635_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln98_5_fu_660_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln98_6_fu_684_p1;
wire    ap_block_pp0_stage19;
wire   [63:0] zext_ln98_7_fu_708_p1;
wire    ap_block_pp0_stage24;
wire   [63:0] zext_ln98_8_fu_733_p1;
wire    ap_block_pp0_stage29;
wire   [63:0] zext_ln98_9_fu_757_p1;
wire    ap_block_pp0_stage34;
wire   [63:0] zext_ln98_10_fu_781_p1;
wire    ap_block_pp0_stage39;
reg   [1:0] j_fu_92;
wire   [1:0] add_ln99_fu_800_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_fu_96;
wire   [3:0] select_ln98_3_fu_795_p3;
reg   [3:0] ap_sig_allocacmp_i_1;
reg   [4:0] indvar_flatten58_fu_100;
wire   [4:0] add_ln98_fu_301_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten58_load;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage28;
wire    ap_block_pp0_stage33;
wire    ap_block_pp0_stage38;
wire   [31:0] add_ln102_7_fu_815_p2;
wire   [3:0] or_ln_fu_334_p3;
wire  signed [5:0] sext_ln100_fu_342_p1;
wire   [4:0] p_shl_fu_359_p3;
wire   [5:0] p_shl_cast_fu_366_p1;
wire   [5:0] zext_ln98_fu_356_p1;
wire   [4:0] p_shl_mid1_fu_379_p3;
wire   [5:0] p_shl_cast_mid1_fu_386_p1;
wire   [5:0] zext_ln98_1_fu_376_p1;
wire   [5:0] p_mid154_fu_390_p2;
wire   [5:0] empty_24_fu_370_p2;
wire   [5:0] select_ln98_1_fu_396_p3;
wire   [5:0] or_ln100_1_fu_412_p3;
wire  signed [6:0] sext_ln100_1_fu_419_p1;
wire  signed [6:0] sext_ln98_fu_403_p1;
wire   [6:0] add_ln100_fu_423_p2;
wire   [5:0] zext_ln102_cast_fu_434_p4;
wire   [4:0] or_ln102_fu_455_p2;
wire   [5:0] zext_ln102_1_cast_fu_461_p3;
wire  signed [31:0] sext_ln100_2_fu_474_p1;
wire   [4:0] or_ln102_1_fu_485_p2;
wire   [5:0] zext_ln102_2_cast_fu_490_p3;
wire   [5:0] zext_ln102_1_mid2_v_v_v_fu_503_p3;
wire   [6:0] add_ln98_1_fu_514_p2;
wire   [4:0] or_ln102_2_fu_525_p2;
wire   [5:0] zext_ln102_3_cast_fu_530_p3;
wire   [4:0] or_ln102_3_fu_543_p2;
wire   [5:0] zext_ln102_4_cast_fu_548_p3;
wire   [4:0] or_ln102_4_fu_571_p2;
wire   [5:0] zext_ln102_5_cast_fu_576_p3;
wire   [4:0] or_ln102_5_fu_589_p2;
wire   [5:0] zext_ln102_6_cast_fu_594_p3;
wire   [4:0] or_ln102_6_fu_612_p2;
wire   [5:0] zext_ln102_7_cast_fu_617_p3;
wire   [6:0] add_ln98_2_fu_630_p2;
wire    ap_block_pp0_stage11;
wire   [6:0] add_ln98_3_fu_655_p2;
wire    ap_block_pp0_stage16;
wire   [6:0] add_ln98_4_fu_679_p2;
wire    ap_block_pp0_stage21;
wire   [6:0] add_ln98_5_fu_703_p2;
wire    ap_block_pp0_stage26;
wire   [6:0] add_ln98_6_fu_728_p2;
wire    ap_block_pp0_stage31;
wire   [6:0] add_ln98_7_fu_752_p2;
wire    ap_block_pp0_stage36;
wire   [6:0] add_ln98_8_fu_776_p2;
wire    ap_block_pp0_stage41;
wire    ap_block_pp0_stage42;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [42:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

sw_compute_mul_32s_11s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 32 ))
mul_32s_11s_32_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_262),
    .din1(reg_258),
    .ce(1'b1),
    .dout(grp_fu_644_p2)
);

sw_compute_mul_32s_11s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 32 ))
mul_32s_11s_32_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_262),
    .din1(w_load_3_reg_945),
    .ce(1'b1),
    .dout(grp_fu_668_p2)
);

sw_compute_mul_32s_11s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 32 ))
mul_32s_11s_32_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_262),
    .din1(w_load_4_reg_955),
    .ce(1'b1),
    .dout(grp_fu_692_p2)
);

sw_compute_mul_32s_11s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 32 ))
mul_32s_11s_32_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_262),
    .din1(reg_266),
    .ce(1'b1),
    .dout(grp_fu_717_p2)
);

sw_compute_mul_32s_11s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 32 ))
mul_32s_11s_32_2_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_262),
    .din1(w_load_6_reg_980),
    .ce(1'b1),
    .dout(grp_fu_741_p2)
);

sw_compute_mul_32s_11s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 32 ))
mul_32s_11s_32_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_262),
    .din1(w_load_7_reg_995),
    .ce(1'b1),
    .dout(grp_fu_765_p2)
);

sw_compute_mul_32s_11s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 32 ))
mul_32s_11s_32_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_262),
    .din1(w_load_8_reg_1010),
    .ce(1'b1),
    .dout(grp_fu_789_p2)
);

sw_compute_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage42_subdone) & (1'b1 == ap_CS_fsm_pp0_stage42))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_96 <= 4'd0;
    end else if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage42_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42))) begin
        i_fu_96 <= select_ln98_3_fu_795_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln98_fu_295_p2 == 1'd0))) begin
            indvar_flatten58_fu_100 <= add_ln98_fu_301_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten58_fu_100 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_92 <= 2'd0;
    end else if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage42_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42))) begin
        j_fu_92 <= add_ln99_fu_800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        acc_addr_reg_894 <= zext_ln100_1_fu_429_p1;
        select_ln98_2_reg_889 <= select_ln98_2_fu_407_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln100_1_reg_919 <= add_ln100_1_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        add_ln102_1_reg_1025 <= add_ln102_1_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        add_ln102_2_reg_1045 <= add_ln102_2_fu_674_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        add_ln102_3_reg_1065 <= add_ln102_3_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        add_ln102_4_reg_1085 <= add_ln102_4_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage33_11001) & (1'b1 == ap_CS_fsm_pp0_stage33))) begin
        add_ln102_5_reg_1105 <= add_ln102_5_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage38_11001) & (1'b1 == ap_CS_fsm_pp0_stage38))) begin
        add_ln102_6_reg_1125 <= add_ln102_6_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        add_ln102_reg_990 <= add_ln102_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln98_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln98_9_reg_872 <= add_ln98_9_fu_324_p2;
        empty_26_reg_878 <= empty_26_fu_330_p1;
        icmp_ln99_reg_857 <= icmp_ln99_fu_310_p2;
        select_ln98_reg_864 <= select_ln98_fu_316_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_847 <= empty_fu_291_p1;
        i_1_reg_841 <= ap_sig_allocacmp_i_1;
        icmp_ln98_reg_853 <= icmp_ln98_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul_ln102_1_reg_1020 <= grp_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        mul_ln102_2_reg_1040 <= grp_fu_668_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        mul_ln102_3_reg_1060 <= grp_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        mul_ln102_4_reg_1080 <= grp_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage32_11001) & (1'b1 == ap_CS_fsm_pp0_stage32))) begin
        mul_ln102_5_reg_1100 <= grp_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage37_11001) & (1'b1 == ap_CS_fsm_pp0_stage37))) begin
        mul_ln102_6_reg_1120 <= grp_fu_765_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage42_11001) & (1'b1 == ap_CS_fsm_pp0_stage42))) begin
        mul_ln102_7_reg_1140 <= grp_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_ln102_reg_975 <= grp_fu_157_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_258 <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage40_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage40)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage35_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_262 <= acc_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_266 <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_s_reg_904[4 : 3] <= tmp_s_fu_448_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        w_load_3_reg_945 <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        w_load_4_reg_955 <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        w_load_6_reg_980 <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        w_load_7_reg_995 <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        w_load_8_reg_1010 <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        zext_ln98_2_reg_929[5 : 3] <= zext_ln98_2_fu_510_p1[5 : 3];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39))) begin
        acc_address0 = zext_ln98_10_fu_781_p1;
    end else if (((1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34))) begin
        acc_address0 = zext_ln98_9_fu_757_p1;
    end else if (((1'b0 == ap_block_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29))) begin
        acc_address0 = zext_ln98_8_fu_733_p1;
    end else if (((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        acc_address0 = zext_ln98_7_fu_708_p1;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        acc_address0 = zext_ln98_6_fu_684_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        acc_address0 = zext_ln98_5_fu_660_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        acc_address0 = zext_ln98_4_fu_635_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        acc_address0 = zext_ln98_3_fu_520_p1;
    end else if ((((1'b0 == ap_block_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        acc_address0 = acc_addr_reg_894;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        acc_address0 = zext_ln100_1_fu_429_p1;
    end else begin
        acc_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage39_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage38_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage34_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage33_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        acc_ce0 = 1'b1;
    end else begin
        acc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_d0 = add_ln102_7_fu_815_p2;
    end else if (((1'b0 == ap_block_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38))) begin
        acc_d0 = add_ln102_6_fu_771_p2;
    end else if (((1'b0 == ap_block_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33))) begin
        acc_d0 = add_ln102_5_fu_747_p2;
    end else if (((1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        acc_d0 = add_ln102_4_fu_723_p2;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        acc_d0 = add_ln102_3_fu_698_p2;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        acc_d0 = add_ln102_2_fu_674_p2;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        acc_d0 = add_ln102_1_fu_650_p2;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        acc_d0 = add_ln102_fu_607_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        acc_d0 = add_ln100_1_fu_478_p2;
    end else begin
        acc_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage38_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage33_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln98_reg_853 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        acc_we0 = 1'b1;
    end else begin
        acc_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_853 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage42_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_96;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten58_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten58_load = indvar_flatten58_fu_100;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 2'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_92;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            w_address0 = zext_ln102_7_fu_625_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            w_address0 = zext_ln102_6_fu_602_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            w_address0 = zext_ln102_5_fu_584_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            w_address0 = zext_ln102_4_fu_556_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            w_address0 = zext_ln102_3_fu_538_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            w_address0 = zext_ln102_2_fu_498_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            w_address0 = zext_ln102_1_fu_469_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            w_address0 = zext_ln102_fu_443_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            w_address0 = zext_ln100_fu_346_p1;
        end else begin
            w_address0 = 'bx;
        end
    end else begin
        w_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        w_ce0 = 1'b1;
    end else begin
        w_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_1_fu_478_p2 = ($signed(reg_262) + $signed(sext_ln100_2_fu_474_p1));

assign add_ln100_fu_423_p2 = ($signed(sext_ln100_1_fu_419_p1) + $signed(sext_ln98_fu_403_p1));

assign add_ln102_1_fu_650_p2 = (add_ln102_reg_990 + mul_ln102_1_reg_1020);

assign add_ln102_2_fu_674_p2 = (add_ln102_1_reg_1025 + mul_ln102_2_reg_1040);

assign add_ln102_3_fu_698_p2 = (add_ln102_2_reg_1045 + mul_ln102_3_reg_1060);

assign add_ln102_4_fu_723_p2 = (add_ln102_3_reg_1065 + mul_ln102_4_reg_1080);

assign add_ln102_5_fu_747_p2 = (add_ln102_4_reg_1085 + mul_ln102_5_reg_1100);

assign add_ln102_6_fu_771_p2 = (add_ln102_5_reg_1105 + mul_ln102_6_reg_1120);

assign add_ln102_7_fu_815_p2 = (add_ln102_6_reg_1125 + mul_ln102_7_reg_1140);

assign add_ln102_fu_607_p2 = (add_ln100_1_reg_919 + mul_ln102_reg_975);

assign add_ln98_1_fu_514_p2 = (zext_ln98_2_fu_510_p1 + 7'd32);

assign add_ln98_2_fu_630_p2 = (zext_ln98_2_reg_929 + 7'd33);

assign add_ln98_3_fu_655_p2 = (zext_ln98_2_reg_929 + 7'd34);

assign add_ln98_4_fu_679_p2 = (zext_ln98_2_reg_929 + 7'd35);

assign add_ln98_5_fu_703_p2 = (zext_ln98_2_reg_929 + 7'd36);

assign add_ln98_6_fu_728_p2 = (zext_ln98_2_reg_929 + 7'd37);

assign add_ln98_7_fu_752_p2 = (zext_ln98_2_reg_929 + 7'd38);

assign add_ln98_8_fu_776_p2 = (zext_ln98_2_reg_929 + 7'd39);

assign add_ln98_9_fu_324_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign add_ln98_fu_301_p2 = (ap_sig_allocacmp_indvar_flatten58_load + 5'd1);

assign add_ln99_fu_800_p2 = (select_ln98_reg_864 + 2'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage40 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage41 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp0_stage42 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign empty_24_fu_370_p2 = (p_shl_cast_fu_366_p1 - zext_ln98_fu_356_p1);

assign empty_26_fu_330_p1 = add_ln98_9_fu_324_p2[2:0];

assign empty_fu_291_p1 = ap_sig_allocacmp_i_1[2:0];

assign grp_fu_157_p_ce = 1'b1;

assign grp_fu_157_p_din0 = reg_262;

assign grp_fu_157_p_din1 = sext_ln102_fu_561_p1;

assign icmp_ln98_fu_295_p2 = ((ap_sig_allocacmp_indvar_flatten58_load == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_310_p2 = ((ap_sig_allocacmp_j_load == 2'd3) ? 1'b1 : 1'b0);

assign or_ln100_1_fu_412_p3 = {{4'd8}, {select_ln98_reg_864}};

assign or_ln102_1_fu_485_p2 = (tmp_s_reg_904 | 5'd2);

assign or_ln102_2_fu_525_p2 = (tmp_s_reg_904 | 5'd3);

assign or_ln102_3_fu_543_p2 = (tmp_s_reg_904 | 5'd4);

assign or_ln102_4_fu_571_p2 = (tmp_s_reg_904 | 5'd5);

assign or_ln102_5_fu_589_p2 = (tmp_s_reg_904 | 5'd6);

assign or_ln102_6_fu_612_p2 = (tmp_s_reg_904 | 5'd7);

assign or_ln102_fu_455_p2 = (tmp_s_fu_448_p3 | 5'd1);

assign or_ln_fu_334_p3 = {{2'd2}, {select_ln98_fu_316_p3}};

assign p_mid154_fu_390_p2 = (p_shl_cast_mid1_fu_386_p1 - zext_ln98_1_fu_376_p1);

assign p_shl_cast_fu_366_p1 = p_shl_fu_359_p3;

assign p_shl_cast_mid1_fu_386_p1 = p_shl_mid1_fu_379_p3;

assign p_shl_fu_359_p3 = {{empty_reg_847}, {2'd0}};

assign p_shl_mid1_fu_379_p3 = {{empty_26_reg_878}, {2'd0}};

assign select_ln98_1_fu_396_p3 = ((icmp_ln99_reg_857[0:0] == 1'b1) ? p_mid154_fu_390_p2 : empty_24_fu_370_p2);

assign select_ln98_2_fu_407_p3 = ((icmp_ln99_reg_857[0:0] == 1'b1) ? empty_26_reg_878 : empty_reg_847);

assign select_ln98_3_fu_795_p3 = ((icmp_ln99_reg_857[0:0] == 1'b1) ? add_ln98_9_reg_872 : i_1_reg_841);

assign select_ln98_fu_316_p3 = ((icmp_ln99_fu_310_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_j_load);

assign sext_ln100_1_fu_419_p1 = $signed(or_ln100_1_fu_412_p3);

assign sext_ln100_2_fu_474_p1 = reg_258;

assign sext_ln100_fu_342_p1 = $signed(or_ln_fu_334_p3);

assign sext_ln102_fu_561_p1 = reg_266;

assign sext_ln98_fu_403_p1 = $signed(select_ln98_1_fu_396_p3);

assign tmp_s_fu_448_p3 = {{select_ln98_reg_864}, {3'd0}};

assign zext_ln100_1_fu_429_p1 = add_ln100_fu_423_p2;

assign zext_ln100_fu_346_p1 = $unsigned(sext_ln100_fu_342_p1);

assign zext_ln102_1_cast_fu_461_p3 = {{1'd1}, {or_ln102_fu_455_p2}};

assign zext_ln102_1_fu_469_p1 = zext_ln102_1_cast_fu_461_p3;

assign zext_ln102_1_mid2_v_v_v_fu_503_p3 = {{select_ln98_2_reg_889}, {3'd0}};

assign zext_ln102_2_cast_fu_490_p3 = {{1'd1}, {or_ln102_1_fu_485_p2}};

assign zext_ln102_2_fu_498_p1 = zext_ln102_2_cast_fu_490_p3;

assign zext_ln102_3_cast_fu_530_p3 = {{1'd1}, {or_ln102_2_fu_525_p2}};

assign zext_ln102_3_fu_538_p1 = zext_ln102_3_cast_fu_530_p3;

assign zext_ln102_4_cast_fu_548_p3 = {{1'd1}, {or_ln102_3_fu_543_p2}};

assign zext_ln102_4_fu_556_p1 = zext_ln102_4_cast_fu_548_p3;

assign zext_ln102_5_cast_fu_576_p3 = {{1'd1}, {or_ln102_4_fu_571_p2}};

assign zext_ln102_5_fu_584_p1 = zext_ln102_5_cast_fu_576_p3;

assign zext_ln102_6_cast_fu_594_p3 = {{1'd1}, {or_ln102_5_fu_589_p2}};

assign zext_ln102_6_fu_602_p1 = zext_ln102_6_cast_fu_594_p3;

assign zext_ln102_7_cast_fu_617_p3 = {{1'd1}, {or_ln102_6_fu_612_p2}};

assign zext_ln102_7_fu_625_p1 = zext_ln102_7_cast_fu_617_p3;

assign zext_ln102_cast_fu_434_p4 = {{{{1'd1}, {select_ln98_reg_864}}}, {3'd0}};

assign zext_ln102_fu_443_p1 = zext_ln102_cast_fu_434_p4;

assign zext_ln98_10_fu_781_p1 = add_ln98_8_fu_776_p2;

assign zext_ln98_1_fu_376_p1 = add_ln98_9_reg_872;

assign zext_ln98_2_fu_510_p1 = zext_ln102_1_mid2_v_v_v_fu_503_p3;

assign zext_ln98_3_fu_520_p1 = add_ln98_1_fu_514_p2;

assign zext_ln98_4_fu_635_p1 = add_ln98_2_fu_630_p2;

assign zext_ln98_5_fu_660_p1 = add_ln98_3_fu_655_p2;

assign zext_ln98_6_fu_684_p1 = add_ln98_4_fu_679_p2;

assign zext_ln98_7_fu_708_p1 = add_ln98_5_fu_703_p2;

assign zext_ln98_8_fu_733_p1 = add_ln98_6_fu_728_p2;

assign zext_ln98_9_fu_757_p1 = add_ln98_7_fu_752_p2;

assign zext_ln98_fu_356_p1 = i_1_reg_841;

always @ (posedge ap_clk) begin
    tmp_s_reg_904[2:0] <= 3'b000;
    zext_ln98_2_reg_929[2:0] <= 3'b000;
    zext_ln98_2_reg_929[6] <= 1'b0;
end

endmodule //sw_compute_sw_compute_Pipeline_VITIS_LOOP_98_6_VITIS_LOOP_99_7
